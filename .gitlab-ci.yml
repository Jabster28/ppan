image: "rustlang/rust:nightly"

variables:
  CARGO_HOME: ".cargo/"

default:
  before_script:
    - rustc --version
    - cargo --version
    - apt-get update -qq && apt-get install libudev-dev libasound2-dev alsa-utils lsb-release software-properties-common llvm clang-11 lld -qq
    - curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/local/bin || true
    - export PATH="$CI_PROJECT_DIR/.cargo/bin:$PATH"

cache:
  paths:
    - target/
    - .cargo/

stages:
  - test
  - build
  - release
bleeding:
  stage: build
  script:
    - just package
  artifacts:
    paths:
      - dist

publish-beta:
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+b\-\d+/' # A specific tag with 'X.Y.Zb-V' pattern is created
  stage: release
  script:
    - just publish-beta $CI_COMMIT_TAG
    - WINDOWS=1 just publish-beta $CI_COMMIT_TAG
  artifacts:
    paths:
      - dist

publish:
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+b\-\d+/'
      when: never
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+/' # A specific tag with 'X.Y.Z' pattern is created
  stage: release
  script:
    - just publish $CI_COMMIT_TAG
    - WINDOWS=1 just publish $CI_COMMIT_TAG
  artifacts:
    paths:
      - dist

test-code:
  stage: test
  script:
    - rustup component add rustfmt
    - cargo fmt -- --check
    - rustup component add clippy
    - cargo install junitify
    - cargo test -- --format=json -Z unstable-options --report-time | junitify --out $CI_PROJECT_DIR/tests/
    - cargo install gitlab_clippy
    - cargo clippy --message-format=json -- -W clippy::pedantic | gitlab-clippy > tests/gl-code-quality-report.json
  artifacts:
    when: always
    paths:
      - tests/*
    reports:
      junit: tests/*.xml
      codequality: tests/gl-code-quality-report.json



publish-macos:
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+b\-\d+/'
      when: never
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+/' # A specific tag with 'X.Y.Z' pattern is created
  stage: release
  script:
    - just publish $CI_COMMIT_TAG
  artifacts:
    paths:
      - dist
  tags:
    - macos

publish-beta-macos:
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+b\-\d+/'
  stage: release
  script:
    - just publish-beta $CI_COMMIT_TAG
  artifacts:
    paths:
      - dist
  tags:
    - macos
