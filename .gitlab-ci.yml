image: "rust:latest"

default:
  before_script:
    - rustc --version
    - cargo --version
    - apt-get update -qq && apt-get install libudev-dev libasound2-dev alsa-utils -qq
    - curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/local/bin
  artifacts:
    paths:
      - target/release/ppan
cache:
  paths:
    - target/

stages:
  - test
  - build
  - release

compile:
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+/'
      when: never
  stage: build
  script:
    - cargo build --release

publish-beta:
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+b\-\d+/' # A specific tag with 'X.Y.Zb-V' pattern is created
  stage: release
  script:
    - curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/local/bin
    - just publish-beta $CI_COMMIT_TAG

publish:
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+b\-\d+/'
      when: never
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+/' # A specific tag with 'X.Y.Z' pattern is created
  stage: release
  script:
    - curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/local/bin
    - just publish $CI_COMMIT_TAG

test-code:
  stage: test
  script:
    - cargo install junitify
    - cargo test -- --format=json -Z unstable-options --report-time | junitify --out $CI_PROJECT_DIR/tests/


lint-code:
  stage: test
  script:
    - rustup component add clippy
    - cargo clippy -- -D warnings

format-code:
  stage: test
  script:
    - rustup component add rustfmt
    - cargo fmt -- --check
